   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.default_layer_debug,"ax",@progbits
  11               	.global	default_layer_debug
  13               	default_layer_debug:
  14               	.LFB5:
  15               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /*
  15:./tmk_core/common/action_layer.c ****  * Default Layer State
  16:./tmk_core/common/action_layer.c ****  */
  17:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  18:./tmk_core/common/action_layer.c **** 
  19:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  20:./tmk_core/common/action_layer.c **** {
  21:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  22:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  23:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  24:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  25:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  26:./tmk_core/common/action_layer.c **** }
  27:./tmk_core/common/action_layer.c **** 
  28:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  29:./tmk_core/common/action_layer.c **** {
  16               		.loc 1 29 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  30:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  22               		.loc 1 30 76 view .LVU1
  23               	/* epilogue start */
  31:./tmk_core/common/action_layer.c **** }
  24               		.loc 1 31 1 is_stmt 0 view .LVU2
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE5:
  29               		.section	.text.default_layer_set,"ax",@progbits
  30               	.global	default_layer_set
  32               	default_layer_set:
  33               	.LVL0:
  34               	.LFB6:
  32:./tmk_core/common/action_layer.c **** 
  33:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  34:./tmk_core/common/action_layer.c **** {
  35               		.loc 1 34 1 is_stmt 1 view -0
  36               		.cfi_startproc
  37               	/* prologue: function */
  38               	/* frame size = 0 */
  39               	/* stack size = 0 */
  40               	.L__stack_usage = 0
  41               		.loc 1 34 1 is_stmt 0 view .LVU4
  42 0000 6093 0000 		sts default_layer_state,r22
  43 0004 7093 0000 		sts default_layer_state+1,r23
  44 0008 8093 0000 		sts default_layer_state+2,r24
  45 000c 9093 0000 		sts default_layer_state+3,r25
  35:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  46               		.loc 1 35 5 is_stmt 1 view .LVU5
  47               	.LVL1:
  48               	.LBB4:
  49               	.LBI4:
  19:./tmk_core/common/action_layer.c **** {
  50               		.loc 1 19 13 view .LVU6
  51               	.LBB5:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  52               		.loc 1 21 35 view .LVU7
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  53               		.loc 1 22 5 view .LVU8
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  54               		.loc 1 22 41 view .LVU9
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  55               		.loc 1 23 5 view .LVU10
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  56               		.loc 1 24 5 view .LVU11
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  57               		.loc 1 24 39 view .LVU12
  25:./tmk_core/common/action_layer.c **** }
  58               		.loc 1 25 5 view .LVU13
  59 0010 0C94 0000 		jmp clear_keyboard_but_mods
  60               	.LVL2:
  25:./tmk_core/common/action_layer.c **** }
  61               		.loc 1 25 5 is_stmt 0 view .LVU14
  62               	.LBE5:
  63               	.LBE4:
  64               		.cfi_endproc
  65               	.LFE6:
  67               		.section	.text.default_layer_or,"ax",@progbits
  68               	.global	default_layer_or
  70               	default_layer_or:
  71               	.LVL3:
  72               	.LFB7:
  36:./tmk_core/common/action_layer.c **** }
  37:./tmk_core/common/action_layer.c **** 
  38:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  39:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  40:./tmk_core/common/action_layer.c **** {
  73               		.loc 1 40 1 is_stmt 1 view -0
  74               		.cfi_startproc
  75               		.loc 1 40 1 is_stmt 0 view .LVU16
  76 0000 CF93      		push r28
  77               	.LCFI0:
  78               		.cfi_def_cfa_offset 3
  79               		.cfi_offset 28, -2
  80 0002 DF93      		push r29
  81               	.LCFI1:
  82               		.cfi_def_cfa_offset 4
  83               		.cfi_offset 29, -3
  84 0004 00D0      		rcall .
  85 0006 00D0      		rcall .
  86               	.LCFI2:
  87               		.cfi_def_cfa_offset 8
  88 0008 CDB7      		in r28,__SP_L__
  89 000a DEB7      		in r29,__SP_H__
  90               	.LCFI3:
  91               		.cfi_def_cfa_register 28
  92               	/* prologue: function */
  93               	/* frame size = 4 */
  94               	/* stack size = 6 */
  95               	.L__stack_usage = 6
  96 000c 6983      		std Y+1,r22
  97 000e 7A83      		std Y+2,r23
  98 0010 8B83      		std Y+3,r24
  99 0012 9C83      		std Y+4,r25
  41:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 100               		.loc 1 41 5 is_stmt 1 view .LVU17
 101               	.LVL4:
 102               	.LBB8:
 103               	.LBI8:
  19:./tmk_core/common/action_layer.c **** {
 104               		.loc 1 19 13 view .LVU18
 105               	.LBB9:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 106               		.loc 1 21 35 view .LVU19
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 107               		.loc 1 22 5 view .LVU20
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 108               		.loc 1 22 41 view .LVU21
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 109               		.loc 1 23 5 view .LVU22
 110               	.LBE9:
 111               	.LBE8:
 112               		.loc 1 41 5 is_stmt 0 view .LVU23
 113 0014 8091 0000 		lds r24,default_layer_state
 114 0018 9091 0000 		lds r25,default_layer_state+1
 115 001c A091 0000 		lds r26,default_layer_state+2
 116 0020 B091 0000 		lds r27,default_layer_state+3
 117 0024 2981      		ldd r18,Y+1
 118 0026 3A81      		ldd r19,Y+2
 119 0028 4B81      		ldd r20,Y+3
 120 002a 5C81      		ldd r21,Y+4
 121 002c 822B      		or r24,r18
 122 002e 932B      		or r25,r19
 123 0030 A42B      		or r26,r20
 124 0032 B52B      		or r27,r21
 125               	.LBB12:
 126               	.LBB10:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 127               		.loc 1 23 25 view .LVU24
 128 0034 8093 0000 		sts default_layer_state,r24
 129 0038 9093 0000 		sts default_layer_state+1,r25
 130 003c A093 0000 		sts default_layer_state+2,r26
 131 0040 B093 0000 		sts default_layer_state+3,r27
 132               	.LVL5:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 133               		.loc 1 24 5 is_stmt 1 view .LVU25
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 134               		.loc 1 24 39 view .LVU26
  25:./tmk_core/common/action_layer.c **** }
 135               		.loc 1 25 5 view .LVU27
 136               	/* epilogue start */
 137               	.LBE10:
 138               	.LBE12:
  42:./tmk_core/common/action_layer.c **** }
 139               		.loc 1 42 1 is_stmt 0 view .LVU28
 140 0044 0F90      		pop __tmp_reg__
 141 0046 0F90      		pop __tmp_reg__
 142 0048 0F90      		pop __tmp_reg__
 143 004a 0F90      		pop __tmp_reg__
 144 004c DF91      		pop r29
 145 004e CF91      		pop r28
 146               	.LBB13:
 147               	.LBB11:
  25:./tmk_core/common/action_layer.c **** }
 148               		.loc 1 25 5 view .LVU29
 149 0050 0C94 0000 		jmp clear_keyboard_but_mods
 150               	.LVL6:
  25:./tmk_core/common/action_layer.c **** }
 151               		.loc 1 25 5 view .LVU30
 152               	.LBE11:
 153               	.LBE13:
 154               		.cfi_endproc
 155               	.LFE7:
 157               		.section	.text.default_layer_and,"ax",@progbits
 158               	.global	default_layer_and
 160               	default_layer_and:
 161               	.LVL7:
 162               	.LFB8:
  43:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  44:./tmk_core/common/action_layer.c **** {
 163               		.loc 1 44 1 is_stmt 1 view -0
 164               		.cfi_startproc
 165               		.loc 1 44 1 is_stmt 0 view .LVU32
 166 0000 CF93      		push r28
 167               	.LCFI4:
 168               		.cfi_def_cfa_offset 3
 169               		.cfi_offset 28, -2
 170 0002 DF93      		push r29
 171               	.LCFI5:
 172               		.cfi_def_cfa_offset 4
 173               		.cfi_offset 29, -3
 174 0004 00D0      		rcall .
 175 0006 00D0      		rcall .
 176               	.LCFI6:
 177               		.cfi_def_cfa_offset 8
 178 0008 CDB7      		in r28,__SP_L__
 179 000a DEB7      		in r29,__SP_H__
 180               	.LCFI7:
 181               		.cfi_def_cfa_register 28
 182               	/* prologue: function */
 183               	/* frame size = 4 */
 184               	/* stack size = 6 */
 185               	.L__stack_usage = 6
 186 000c 6983      		std Y+1,r22
 187 000e 7A83      		std Y+2,r23
 188 0010 8B83      		std Y+3,r24
 189 0012 9C83      		std Y+4,r25
  45:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 190               		.loc 1 45 5 is_stmt 1 view .LVU33
 191               	.LVL8:
 192               	.LBB16:
 193               	.LBI16:
  19:./tmk_core/common/action_layer.c **** {
 194               		.loc 1 19 13 view .LVU34
 195               	.LBB17:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 196               		.loc 1 21 35 view .LVU35
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 197               		.loc 1 22 5 view .LVU36
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 198               		.loc 1 22 41 view .LVU37
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 199               		.loc 1 23 5 view .LVU38
 200               	.LBE17:
 201               	.LBE16:
 202               		.loc 1 45 5 is_stmt 0 view .LVU39
 203 0014 8091 0000 		lds r24,default_layer_state
 204 0018 9091 0000 		lds r25,default_layer_state+1
 205 001c A091 0000 		lds r26,default_layer_state+2
 206 0020 B091 0000 		lds r27,default_layer_state+3
 207 0024 2981      		ldd r18,Y+1
 208 0026 3A81      		ldd r19,Y+2
 209 0028 4B81      		ldd r20,Y+3
 210 002a 5C81      		ldd r21,Y+4
 211 002c 8223      		and r24,r18
 212 002e 9323      		and r25,r19
 213 0030 A423      		and r26,r20
 214 0032 B523      		and r27,r21
 215               	.LBB20:
 216               	.LBB18:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 217               		.loc 1 23 25 view .LVU40
 218 0034 8093 0000 		sts default_layer_state,r24
 219 0038 9093 0000 		sts default_layer_state+1,r25
 220 003c A093 0000 		sts default_layer_state+2,r26
 221 0040 B093 0000 		sts default_layer_state+3,r27
 222               	.LVL9:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 223               		.loc 1 24 5 is_stmt 1 view .LVU41
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 224               		.loc 1 24 39 view .LVU42
  25:./tmk_core/common/action_layer.c **** }
 225               		.loc 1 25 5 view .LVU43
 226               	/* epilogue start */
 227               	.LBE18:
 228               	.LBE20:
  46:./tmk_core/common/action_layer.c **** }
 229               		.loc 1 46 1 is_stmt 0 view .LVU44
 230 0044 0F90      		pop __tmp_reg__
 231 0046 0F90      		pop __tmp_reg__
 232 0048 0F90      		pop __tmp_reg__
 233 004a 0F90      		pop __tmp_reg__
 234 004c DF91      		pop r29
 235 004e CF91      		pop r28
 236               	.LBB21:
 237               	.LBB19:
  25:./tmk_core/common/action_layer.c **** }
 238               		.loc 1 25 5 view .LVU45
 239 0050 0C94 0000 		jmp clear_keyboard_but_mods
 240               	.LVL10:
  25:./tmk_core/common/action_layer.c **** }
 241               		.loc 1 25 5 view .LVU46
 242               	.LBE19:
 243               	.LBE21:
 244               		.cfi_endproc
 245               	.LFE8:
 247               		.section	.text.default_layer_xor,"ax",@progbits
 248               	.global	default_layer_xor
 250               	default_layer_xor:
 251               	.LVL11:
 252               	.LFB9:
  47:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  48:./tmk_core/common/action_layer.c **** {
 253               		.loc 1 48 1 is_stmt 1 view -0
 254               		.cfi_startproc
 255               		.loc 1 48 1 is_stmt 0 view .LVU48
 256 0000 CF93      		push r28
 257               	.LCFI8:
 258               		.cfi_def_cfa_offset 3
 259               		.cfi_offset 28, -2
 260 0002 DF93      		push r29
 261               	.LCFI9:
 262               		.cfi_def_cfa_offset 4
 263               		.cfi_offset 29, -3
 264 0004 00D0      		rcall .
 265 0006 00D0      		rcall .
 266               	.LCFI10:
 267               		.cfi_def_cfa_offset 8
 268 0008 CDB7      		in r28,__SP_L__
 269 000a DEB7      		in r29,__SP_H__
 270               	.LCFI11:
 271               		.cfi_def_cfa_register 28
 272               	/* prologue: function */
 273               	/* frame size = 4 */
 274               	/* stack size = 6 */
 275               	.L__stack_usage = 6
 276 000c 6983      		std Y+1,r22
 277 000e 7A83      		std Y+2,r23
 278 0010 8B83      		std Y+3,r24
 279 0012 9C83      		std Y+4,r25
  49:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 280               		.loc 1 49 5 is_stmt 1 view .LVU49
 281               	.LVL12:
 282               	.LBB24:
 283               	.LBI24:
  19:./tmk_core/common/action_layer.c **** {
 284               		.loc 1 19 13 view .LVU50
 285               	.LBB25:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 286               		.loc 1 21 35 view .LVU51
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 287               		.loc 1 22 5 view .LVU52
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 288               		.loc 1 22 41 view .LVU53
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 289               		.loc 1 23 5 view .LVU54
 290               	.LBE25:
 291               	.LBE24:
 292               		.loc 1 49 5 is_stmt 0 view .LVU55
 293 0014 8091 0000 		lds r24,default_layer_state
 294 0018 9091 0000 		lds r25,default_layer_state+1
 295 001c A091 0000 		lds r26,default_layer_state+2
 296 0020 B091 0000 		lds r27,default_layer_state+3
 297 0024 2981      		ldd r18,Y+1
 298 0026 3A81      		ldd r19,Y+2
 299 0028 4B81      		ldd r20,Y+3
 300 002a 5C81      		ldd r21,Y+4
 301 002c 8227      		eor r24,r18
 302 002e 9327      		eor r25,r19
 303 0030 A427      		eor r26,r20
 304 0032 B527      		eor r27,r21
 305               	.LBB28:
 306               	.LBB26:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 307               		.loc 1 23 25 view .LVU56
 308 0034 8093 0000 		sts default_layer_state,r24
 309 0038 9093 0000 		sts default_layer_state+1,r25
 310 003c A093 0000 		sts default_layer_state+2,r26
 311 0040 B093 0000 		sts default_layer_state+3,r27
 312               	.LVL13:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 313               		.loc 1 24 5 is_stmt 1 view .LVU57
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 314               		.loc 1 24 39 view .LVU58
  25:./tmk_core/common/action_layer.c **** }
 315               		.loc 1 25 5 view .LVU59
 316               	/* epilogue start */
 317               	.LBE26:
 318               	.LBE28:
  50:./tmk_core/common/action_layer.c **** }
 319               		.loc 1 50 1 is_stmt 0 view .LVU60
 320 0044 0F90      		pop __tmp_reg__
 321 0046 0F90      		pop __tmp_reg__
 322 0048 0F90      		pop __tmp_reg__
 323 004a 0F90      		pop __tmp_reg__
 324 004c DF91      		pop r29
 325 004e CF91      		pop r28
 326               	.LBB29:
 327               	.LBB27:
  25:./tmk_core/common/action_layer.c **** }
 328               		.loc 1 25 5 view .LVU61
 329 0050 0C94 0000 		jmp clear_keyboard_but_mods
 330               	.LVL14:
  25:./tmk_core/common/action_layer.c **** }
 331               		.loc 1 25 5 view .LVU62
 332               	.LBE27:
 333               	.LBE29:
 334               		.cfi_endproc
 335               	.LFE9:
 337               		.section	.text.layer_clear,"ax",@progbits
 338               	.global	layer_clear
 340               	layer_clear:
 341               	.LFB11:
  51:./tmk_core/common/action_layer.c **** #endif
  52:./tmk_core/common/action_layer.c **** 
  53:./tmk_core/common/action_layer.c **** 
  54:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  55:./tmk_core/common/action_layer.c **** /*
  56:./tmk_core/common/action_layer.c ****  * Keymap Layer State
  57:./tmk_core/common/action_layer.c ****  */
  58:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  59:./tmk_core/common/action_layer.c **** 
  60:./tmk_core/common/action_layer.c **** static void layer_state_set(uint32_t state)
  61:./tmk_core/common/action_layer.c **** {
  62:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
  63:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
  64:./tmk_core/common/action_layer.c ****     layer_state = state;
  65:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
  66:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  67:./tmk_core/common/action_layer.c **** }
  68:./tmk_core/common/action_layer.c **** 
  69:./tmk_core/common/action_layer.c **** void layer_clear(void)
  70:./tmk_core/common/action_layer.c **** {
 342               		.loc 1 70 1 is_stmt 1 view -0
 343               		.cfi_startproc
 344               	/* prologue: function */
 345               	/* frame size = 0 */
 346               	/* stack size = 0 */
 347               	.L__stack_usage = 0
  71:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 348               		.loc 1 71 5 view .LVU64
 349               	.LVL15:
 350               	.LBB32:
 351               	.LBI32:
  60:./tmk_core/common/action_layer.c **** {
 352               		.loc 1 60 13 view .LVU65
 353               	.LBB33:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 354               		.loc 1 62 28 view .LVU66
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 355               		.loc 1 63 5 view .LVU67
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 356               		.loc 1 63 34 view .LVU68
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 357               		.loc 1 64 5 view .LVU69
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 358               		.loc 1 64 17 is_stmt 0 view .LVU70
 359 0000 1092 0000 		sts layer_state,__zero_reg__
 360 0004 1092 0000 		sts layer_state+1,__zero_reg__
 361 0008 1092 0000 		sts layer_state+2,__zero_reg__
 362 000c 1092 0000 		sts layer_state+3,__zero_reg__
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 363               		.loc 1 65 5 is_stmt 1 view .LVU71
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 364               		.loc 1 65 30 view .LVU72
  66:./tmk_core/common/action_layer.c **** }
 365               		.loc 1 66 5 view .LVU73
 366 0010 0C94 0000 		jmp clear_keyboard_but_mods
 367               	.LVL16:
 368               	.LBE33:
 369               	.LBE32:
 370               		.cfi_endproc
 371               	.LFE11:
 373               		.section	.text.layer_move,"ax",@progbits
 374               	.global	layer_move
 376               	layer_move:
 377               	.LVL17:
 378               	.LFB12:
  72:./tmk_core/common/action_layer.c **** }
  73:./tmk_core/common/action_layer.c **** 
  74:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
  75:./tmk_core/common/action_layer.c **** {
 379               		.loc 1 75 1 view -0
 380               		.cfi_startproc
 381               	/* prologue: function */
 382               	/* frame size = 0 */
 383               	/* stack size = 0 */
 384               	.L__stack_usage = 0
  76:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 385               		.loc 1 76 5 view .LVU75
 386               	.LBB36:
 387               	.LBI36:
  60:./tmk_core/common/action_layer.c **** {
 388               		.loc 1 60 13 view .LVU76
 389               	.LBB37:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 390               		.loc 1 62 28 view .LVU77
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 391               		.loc 1 63 5 view .LVU78
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 392               		.loc 1 63 34 view .LVU79
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 393               		.loc 1 64 5 view .LVU80
 394               	.LBE37:
 395               	.LBE36:
 396               		.loc 1 76 5 is_stmt 0 view .LVU81
 397 0000 41E0      		ldi r20,lo8(1)
 398 0002 50E0      		ldi r21,0
 399 0004 60E0      		ldi r22,0
 400 0006 70E0      		ldi r23,0
 401 0008 00C0      		rjmp 2f
 402               		1:
 403 000a 440F      		lsl r20
 404 000c 551F      		rol r21
 405 000e 661F      		rol r22
 406 0010 771F      		rol r23
 407               		2:
 408 0012 8A95      		dec r24
 409 0014 02F4      		brpl 1b
 410               	.LBB39:
 411               	.LBB38:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 412               		.loc 1 64 17 view .LVU82
 413 0016 4093 0000 		sts layer_state,r20
 414 001a 5093 0000 		sts layer_state+1,r21
 415 001e 6093 0000 		sts layer_state+2,r22
 416 0022 7093 0000 		sts layer_state+3,r23
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 417               		.loc 1 65 5 is_stmt 1 view .LVU83
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 418               		.loc 1 65 30 view .LVU84
  66:./tmk_core/common/action_layer.c **** }
 419               		.loc 1 66 5 view .LVU85
 420 0026 0C94 0000 		jmp clear_keyboard_but_mods
 421               	.LVL18:
  66:./tmk_core/common/action_layer.c **** }
 422               		.loc 1 66 5 is_stmt 0 view .LVU86
 423               	.LBE38:
 424               	.LBE39:
 425               		.cfi_endproc
 426               	.LFE12:
 428               		.section	.text.layer_on,"ax",@progbits
 429               	.global	layer_on
 431               	layer_on:
 432               	.LVL19:
 433               	.LFB13:
  77:./tmk_core/common/action_layer.c **** }
  78:./tmk_core/common/action_layer.c **** 
  79:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
  80:./tmk_core/common/action_layer.c **** {
 434               		.loc 1 80 1 is_stmt 1 view -0
 435               		.cfi_startproc
 436               	/* prologue: function */
 437               	/* frame size = 0 */
 438               	/* stack size = 0 */
 439               	.L__stack_usage = 0
 440               		.loc 1 80 1 is_stmt 0 view .LVU88
 441 0000 282F      		mov r18,r24
  81:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 442               		.loc 1 81 5 is_stmt 1 view .LVU89
 443               	.LVL20:
 444               	.LBB42:
 445               	.LBI42:
  60:./tmk_core/common/action_layer.c **** {
 446               		.loc 1 60 13 view .LVU90
 447               	.LBB43:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 448               		.loc 1 62 28 view .LVU91
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 449               		.loc 1 63 5 view .LVU92
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 450               		.loc 1 63 34 view .LVU93
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 451               		.loc 1 64 5 view .LVU94
 452               	.LBE43:
 453               	.LBE42:
 454               		.loc 1 81 39 is_stmt 0 view .LVU95
 455 0002 81E0      		ldi r24,lo8(1)
 456 0004 90E0      		ldi r25,0
 457 0006 A0E0      		ldi r26,0
 458 0008 B0E0      		ldi r27,0
 459               	.LVL21:
 460               		.loc 1 81 39 view .LVU96
 461 000a 00C0      		rjmp 2f
 462               		1:
 463 000c 880F      		lsl r24
 464 000e 991F      		rol r25
 465 0010 AA1F      		rol r26
 466 0012 BB1F      		rol r27
 467               		2:
 468 0014 2A95      		dec r18
 469 0016 02F4      		brpl 1b
 470               		.loc 1 81 5 view .LVU97
 471 0018 4091 0000 		lds r20,layer_state
 472 001c 5091 0000 		lds r21,layer_state+1
 473 0020 6091 0000 		lds r22,layer_state+2
 474 0024 7091 0000 		lds r23,layer_state+3
 475 0028 842B      		or r24,r20
 476 002a 952B      		or r25,r21
 477 002c A62B      		or r26,r22
 478 002e B72B      		or r27,r23
 479               	.LBB45:
 480               	.LBB44:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 481               		.loc 1 64 17 view .LVU98
 482 0030 8093 0000 		sts layer_state,r24
 483 0034 9093 0000 		sts layer_state+1,r25
 484 0038 A093 0000 		sts layer_state+2,r26
 485 003c B093 0000 		sts layer_state+3,r27
 486               	.LVL22:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 487               		.loc 1 65 5 is_stmt 1 view .LVU99
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 488               		.loc 1 65 30 view .LVU100
  66:./tmk_core/common/action_layer.c **** }
 489               		.loc 1 66 5 view .LVU101
 490 0040 0C94 0000 		jmp clear_keyboard_but_mods
 491               	.LVL23:
  66:./tmk_core/common/action_layer.c **** }
 492               		.loc 1 66 5 is_stmt 0 view .LVU102
 493               	.LBE44:
 494               	.LBE45:
 495               		.cfi_endproc
 496               	.LFE13:
 498               		.section	.text.layer_off,"ax",@progbits
 499               	.global	layer_off
 501               	layer_off:
 502               	.LVL24:
 503               	.LFB14:
  82:./tmk_core/common/action_layer.c **** }
  83:./tmk_core/common/action_layer.c **** 
  84:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
  85:./tmk_core/common/action_layer.c **** {
 504               		.loc 1 85 1 is_stmt 1 view -0
 505               		.cfi_startproc
 506               	/* prologue: function */
 507               	/* frame size = 0 */
 508               	/* stack size = 0 */
 509               	.L__stack_usage = 0
  86:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 510               		.loc 1 86 5 view .LVU104
 511               	.LBB48:
 512               	.LBI48:
  60:./tmk_core/common/action_layer.c **** {
 513               		.loc 1 60 13 view .LVU105
 514               	.LBB49:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 515               		.loc 1 62 28 view .LVU106
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 516               		.loc 1 63 5 view .LVU107
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 517               		.loc 1 63 34 view .LVU108
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 518               		.loc 1 64 5 view .LVU109
 519               	.LBE49:
 520               	.LBE48:
 521               		.loc 1 86 40 is_stmt 0 view .LVU110
 522 0000 41E0      		ldi r20,lo8(1)
 523 0002 50E0      		ldi r21,0
 524 0004 60E0      		ldi r22,0
 525 0006 70E0      		ldi r23,0
 526 0008 00C0      		rjmp 2f
 527               		1:
 528 000a 440F      		lsl r20
 529 000c 551F      		rol r21
 530 000e 661F      		rol r22
 531 0010 771F      		rol r23
 532               		2:
 533 0012 8A95      		dec r24
 534 0014 02F4      		brpl 1b
 535               		.loc 1 86 35 view .LVU111
 536 0016 4095      		com r20
 537 0018 5095      		com r21
 538 001a 6095      		com r22
 539 001c 7095      		com r23
 540               		.loc 1 86 5 view .LVU112
 541 001e 8091 0000 		lds r24,layer_state
 542 0022 9091 0000 		lds r25,layer_state+1
 543 0026 A091 0000 		lds r26,layer_state+2
 544 002a B091 0000 		lds r27,layer_state+3
 545               	.LVL25:
 546               		.loc 1 86 5 view .LVU113
 547 002e 8423      		and r24,r20
 548 0030 9523      		and r25,r21
 549 0032 A623      		and r26,r22
 550 0034 B723      		and r27,r23
 551               	.LBB51:
 552               	.LBB50:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 553               		.loc 1 64 17 view .LVU114
 554 0036 8093 0000 		sts layer_state,r24
 555 003a 9093 0000 		sts layer_state+1,r25
 556 003e A093 0000 		sts layer_state+2,r26
 557 0042 B093 0000 		sts layer_state+3,r27
 558               	.LVL26:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 559               		.loc 1 65 5 is_stmt 1 view .LVU115
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 560               		.loc 1 65 30 view .LVU116
  66:./tmk_core/common/action_layer.c **** }
 561               		.loc 1 66 5 view .LVU117
 562 0046 0C94 0000 		jmp clear_keyboard_but_mods
 563               	.LVL27:
 564               	.LBE50:
 565               	.LBE51:
 566               		.cfi_endproc
 567               	.LFE14:
 569               		.section	.text.layer_invert,"ax",@progbits
 570               	.global	layer_invert
 572               	layer_invert:
 573               	.LVL28:
 574               	.LFB15:
  87:./tmk_core/common/action_layer.c **** }
  88:./tmk_core/common/action_layer.c **** 
  89:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
  90:./tmk_core/common/action_layer.c **** {
 575               		.loc 1 90 1 view -0
 576               		.cfi_startproc
 577               	/* prologue: function */
 578               	/* frame size = 0 */
 579               	/* stack size = 0 */
 580               	.L__stack_usage = 0
 581               		.loc 1 90 1 is_stmt 0 view .LVU119
 582 0000 282F      		mov r18,r24
  91:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 583               		.loc 1 91 5 is_stmt 1 view .LVU120
 584               	.LVL29:
 585               	.LBB54:
 586               	.LBI54:
  60:./tmk_core/common/action_layer.c **** {
 587               		.loc 1 60 13 view .LVU121
 588               	.LBB55:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 589               		.loc 1 62 28 view .LVU122
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 590               		.loc 1 63 5 view .LVU123
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 591               		.loc 1 63 34 view .LVU124
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 592               		.loc 1 64 5 view .LVU125
 593               	.LBE55:
 594               	.LBE54:
 595               		.loc 1 91 39 is_stmt 0 view .LVU126
 596 0002 81E0      		ldi r24,lo8(1)
 597 0004 90E0      		ldi r25,0
 598 0006 A0E0      		ldi r26,0
 599 0008 B0E0      		ldi r27,0
 600               	.LVL30:
 601               		.loc 1 91 39 view .LVU127
 602 000a 00C0      		rjmp 2f
 603               		1:
 604 000c 880F      		lsl r24
 605 000e 991F      		rol r25
 606 0010 AA1F      		rol r26
 607 0012 BB1F      		rol r27
 608               		2:
 609 0014 2A95      		dec r18
 610 0016 02F4      		brpl 1b
 611               		.loc 1 91 5 view .LVU128
 612 0018 4091 0000 		lds r20,layer_state
 613 001c 5091 0000 		lds r21,layer_state+1
 614 0020 6091 0000 		lds r22,layer_state+2
 615 0024 7091 0000 		lds r23,layer_state+3
 616 0028 8427      		eor r24,r20
 617 002a 9527      		eor r25,r21
 618 002c A627      		eor r26,r22
 619 002e B727      		eor r27,r23
 620               	.LBB57:
 621               	.LBB56:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 622               		.loc 1 64 17 view .LVU129
 623 0030 8093 0000 		sts layer_state,r24
 624 0034 9093 0000 		sts layer_state+1,r25
 625 0038 A093 0000 		sts layer_state+2,r26
 626 003c B093 0000 		sts layer_state+3,r27
 627               	.LVL31:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 628               		.loc 1 65 5 is_stmt 1 view .LVU130
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 629               		.loc 1 65 30 view .LVU131
  66:./tmk_core/common/action_layer.c **** }
 630               		.loc 1 66 5 view .LVU132
 631 0040 0C94 0000 		jmp clear_keyboard_but_mods
 632               	.LVL32:
  66:./tmk_core/common/action_layer.c **** }
 633               		.loc 1 66 5 is_stmt 0 view .LVU133
 634               	.LBE56:
 635               	.LBE57:
 636               		.cfi_endproc
 637               	.LFE15:
 639               		.section	.text.layer_or,"ax",@progbits
 640               	.global	layer_or
 642               	layer_or:
 643               	.LVL33:
 644               	.LFB16:
  92:./tmk_core/common/action_layer.c **** }
  93:./tmk_core/common/action_layer.c **** 
  94:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
  95:./tmk_core/common/action_layer.c **** {
 645               		.loc 1 95 1 is_stmt 1 view -0
 646               		.cfi_startproc
 647               		.loc 1 95 1 is_stmt 0 view .LVU135
 648 0000 CF93      		push r28
 649               	.LCFI12:
 650               		.cfi_def_cfa_offset 3
 651               		.cfi_offset 28, -2
 652 0002 DF93      		push r29
 653               	.LCFI13:
 654               		.cfi_def_cfa_offset 4
 655               		.cfi_offset 29, -3
 656 0004 00D0      		rcall .
 657 0006 00D0      		rcall .
 658               	.LCFI14:
 659               		.cfi_def_cfa_offset 8
 660 0008 CDB7      		in r28,__SP_L__
 661 000a DEB7      		in r29,__SP_H__
 662               	.LCFI15:
 663               		.cfi_def_cfa_register 28
 664               	/* prologue: function */
 665               	/* frame size = 4 */
 666               	/* stack size = 6 */
 667               	.L__stack_usage = 6
 668 000c 6983      		std Y+1,r22
 669 000e 7A83      		std Y+2,r23
 670 0010 8B83      		std Y+3,r24
 671 0012 9C83      		std Y+4,r25
  96:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 672               		.loc 1 96 5 is_stmt 1 view .LVU136
 673               	.LVL34:
 674               	.LBB60:
 675               	.LBI60:
  60:./tmk_core/common/action_layer.c **** {
 676               		.loc 1 60 13 view .LVU137
 677               	.LBB61:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 678               		.loc 1 62 28 view .LVU138
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 679               		.loc 1 63 5 view .LVU139
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 680               		.loc 1 63 34 view .LVU140
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 681               		.loc 1 64 5 view .LVU141
 682               	.LBE61:
 683               	.LBE60:
 684               		.loc 1 96 5 is_stmt 0 view .LVU142
 685 0014 8091 0000 		lds r24,layer_state
 686 0018 9091 0000 		lds r25,layer_state+1
 687 001c A091 0000 		lds r26,layer_state+2
 688 0020 B091 0000 		lds r27,layer_state+3
 689 0024 2981      		ldd r18,Y+1
 690 0026 3A81      		ldd r19,Y+2
 691 0028 4B81      		ldd r20,Y+3
 692 002a 5C81      		ldd r21,Y+4
 693 002c 822B      		or r24,r18
 694 002e 932B      		or r25,r19
 695 0030 A42B      		or r26,r20
 696 0032 B52B      		or r27,r21
 697               	.LBB64:
 698               	.LBB62:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 699               		.loc 1 64 17 view .LVU143
 700 0034 8093 0000 		sts layer_state,r24
 701 0038 9093 0000 		sts layer_state+1,r25
 702 003c A093 0000 		sts layer_state+2,r26
 703 0040 B093 0000 		sts layer_state+3,r27
 704               	.LVL35:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 705               		.loc 1 65 5 is_stmt 1 view .LVU144
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 706               		.loc 1 65 30 view .LVU145
  66:./tmk_core/common/action_layer.c **** }
 707               		.loc 1 66 5 view .LVU146
 708               	/* epilogue start */
 709               	.LBE62:
 710               	.LBE64:
  97:./tmk_core/common/action_layer.c **** }
 711               		.loc 1 97 1 is_stmt 0 view .LVU147
 712 0044 0F90      		pop __tmp_reg__
 713 0046 0F90      		pop __tmp_reg__
 714 0048 0F90      		pop __tmp_reg__
 715 004a 0F90      		pop __tmp_reg__
 716 004c DF91      		pop r29
 717 004e CF91      		pop r28
 718               	.LBB65:
 719               	.LBB63:
  66:./tmk_core/common/action_layer.c **** }
 720               		.loc 1 66 5 view .LVU148
 721 0050 0C94 0000 		jmp clear_keyboard_but_mods
 722               	.LVL36:
  66:./tmk_core/common/action_layer.c **** }
 723               		.loc 1 66 5 view .LVU149
 724               	.LBE63:
 725               	.LBE65:
 726               		.cfi_endproc
 727               	.LFE16:
 729               		.section	.text.layer_and,"ax",@progbits
 730               	.global	layer_and
 732               	layer_and:
 733               	.LVL37:
 734               	.LFB17:
  98:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
  99:./tmk_core/common/action_layer.c **** {
 735               		.loc 1 99 1 is_stmt 1 view -0
 736               		.cfi_startproc
 737               		.loc 1 99 1 is_stmt 0 view .LVU151
 738 0000 CF93      		push r28
 739               	.LCFI16:
 740               		.cfi_def_cfa_offset 3
 741               		.cfi_offset 28, -2
 742 0002 DF93      		push r29
 743               	.LCFI17:
 744               		.cfi_def_cfa_offset 4
 745               		.cfi_offset 29, -3
 746 0004 00D0      		rcall .
 747 0006 00D0      		rcall .
 748               	.LCFI18:
 749               		.cfi_def_cfa_offset 8
 750 0008 CDB7      		in r28,__SP_L__
 751 000a DEB7      		in r29,__SP_H__
 752               	.LCFI19:
 753               		.cfi_def_cfa_register 28
 754               	/* prologue: function */
 755               	/* frame size = 4 */
 756               	/* stack size = 6 */
 757               	.L__stack_usage = 6
 758 000c 6983      		std Y+1,r22
 759 000e 7A83      		std Y+2,r23
 760 0010 8B83      		std Y+3,r24
 761 0012 9C83      		std Y+4,r25
 100:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 762               		.loc 1 100 5 is_stmt 1 view .LVU152
 763               	.LVL38:
 764               	.LBB68:
 765               	.LBI68:
  60:./tmk_core/common/action_layer.c **** {
 766               		.loc 1 60 13 view .LVU153
 767               	.LBB69:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 768               		.loc 1 62 28 view .LVU154
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 769               		.loc 1 63 5 view .LVU155
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 770               		.loc 1 63 34 view .LVU156
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 771               		.loc 1 64 5 view .LVU157
 772               	.LBE69:
 773               	.LBE68:
 774               		.loc 1 100 5 is_stmt 0 view .LVU158
 775 0014 8091 0000 		lds r24,layer_state
 776 0018 9091 0000 		lds r25,layer_state+1
 777 001c A091 0000 		lds r26,layer_state+2
 778 0020 B091 0000 		lds r27,layer_state+3
 779 0024 2981      		ldd r18,Y+1
 780 0026 3A81      		ldd r19,Y+2
 781 0028 4B81      		ldd r20,Y+3
 782 002a 5C81      		ldd r21,Y+4
 783 002c 8223      		and r24,r18
 784 002e 9323      		and r25,r19
 785 0030 A423      		and r26,r20
 786 0032 B523      		and r27,r21
 787               	.LBB72:
 788               	.LBB70:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 789               		.loc 1 64 17 view .LVU159
 790 0034 8093 0000 		sts layer_state,r24
 791 0038 9093 0000 		sts layer_state+1,r25
 792 003c A093 0000 		sts layer_state+2,r26
 793 0040 B093 0000 		sts layer_state+3,r27
 794               	.LVL39:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 795               		.loc 1 65 5 is_stmt 1 view .LVU160
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 796               		.loc 1 65 30 view .LVU161
  66:./tmk_core/common/action_layer.c **** }
 797               		.loc 1 66 5 view .LVU162
 798               	/* epilogue start */
 799               	.LBE70:
 800               	.LBE72:
 101:./tmk_core/common/action_layer.c **** }
 801               		.loc 1 101 1 is_stmt 0 view .LVU163
 802 0044 0F90      		pop __tmp_reg__
 803 0046 0F90      		pop __tmp_reg__
 804 0048 0F90      		pop __tmp_reg__
 805 004a 0F90      		pop __tmp_reg__
 806 004c DF91      		pop r29
 807 004e CF91      		pop r28
 808               	.LBB73:
 809               	.LBB71:
  66:./tmk_core/common/action_layer.c **** }
 810               		.loc 1 66 5 view .LVU164
 811 0050 0C94 0000 		jmp clear_keyboard_but_mods
 812               	.LVL40:
  66:./tmk_core/common/action_layer.c **** }
 813               		.loc 1 66 5 view .LVU165
 814               	.LBE71:
 815               	.LBE73:
 816               		.cfi_endproc
 817               	.LFE17:
 819               		.section	.text.layer_xor,"ax",@progbits
 820               	.global	layer_xor
 822               	layer_xor:
 823               	.LVL41:
 824               	.LFB18:
 102:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 103:./tmk_core/common/action_layer.c **** {
 825               		.loc 1 103 1 is_stmt 1 view -0
 826               		.cfi_startproc
 827               		.loc 1 103 1 is_stmt 0 view .LVU167
 828 0000 CF93      		push r28
 829               	.LCFI20:
 830               		.cfi_def_cfa_offset 3
 831               		.cfi_offset 28, -2
 832 0002 DF93      		push r29
 833               	.LCFI21:
 834               		.cfi_def_cfa_offset 4
 835               		.cfi_offset 29, -3
 836 0004 00D0      		rcall .
 837 0006 00D0      		rcall .
 838               	.LCFI22:
 839               		.cfi_def_cfa_offset 8
 840 0008 CDB7      		in r28,__SP_L__
 841 000a DEB7      		in r29,__SP_H__
 842               	.LCFI23:
 843               		.cfi_def_cfa_register 28
 844               	/* prologue: function */
 845               	/* frame size = 4 */
 846               	/* stack size = 6 */
 847               	.L__stack_usage = 6
 848 000c 6983      		std Y+1,r22
 849 000e 7A83      		std Y+2,r23
 850 0010 8B83      		std Y+3,r24
 851 0012 9C83      		std Y+4,r25
 104:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 852               		.loc 1 104 5 is_stmt 1 view .LVU168
 853               	.LVL42:
 854               	.LBB76:
 855               	.LBI76:
  60:./tmk_core/common/action_layer.c **** {
 856               		.loc 1 60 13 view .LVU169
 857               	.LBB77:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 858               		.loc 1 62 28 view .LVU170
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 859               		.loc 1 63 5 view .LVU171
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 860               		.loc 1 63 34 view .LVU172
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 861               		.loc 1 64 5 view .LVU173
 862               	.LBE77:
 863               	.LBE76:
 864               		.loc 1 104 5 is_stmt 0 view .LVU174
 865 0014 8091 0000 		lds r24,layer_state
 866 0018 9091 0000 		lds r25,layer_state+1
 867 001c A091 0000 		lds r26,layer_state+2
 868 0020 B091 0000 		lds r27,layer_state+3
 869 0024 2981      		ldd r18,Y+1
 870 0026 3A81      		ldd r19,Y+2
 871 0028 4B81      		ldd r20,Y+3
 872 002a 5C81      		ldd r21,Y+4
 873 002c 8227      		eor r24,r18
 874 002e 9327      		eor r25,r19
 875 0030 A427      		eor r26,r20
 876 0032 B527      		eor r27,r21
 877               	.LBB80:
 878               	.LBB78:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 879               		.loc 1 64 17 view .LVU175
 880 0034 8093 0000 		sts layer_state,r24
 881 0038 9093 0000 		sts layer_state+1,r25
 882 003c A093 0000 		sts layer_state+2,r26
 883 0040 B093 0000 		sts layer_state+3,r27
 884               	.LVL43:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 885               		.loc 1 65 5 is_stmt 1 view .LVU176
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 886               		.loc 1 65 30 view .LVU177
  66:./tmk_core/common/action_layer.c **** }
 887               		.loc 1 66 5 view .LVU178
 888               	/* epilogue start */
 889               	.LBE78:
 890               	.LBE80:
 105:./tmk_core/common/action_layer.c **** }
 891               		.loc 1 105 1 is_stmt 0 view .LVU179
 892 0044 0F90      		pop __tmp_reg__
 893 0046 0F90      		pop __tmp_reg__
 894 0048 0F90      		pop __tmp_reg__
 895 004a 0F90      		pop __tmp_reg__
 896 004c DF91      		pop r29
 897 004e CF91      		pop r28
 898               	.LBB81:
 899               	.LBB79:
  66:./tmk_core/common/action_layer.c **** }
 900               		.loc 1 66 5 view .LVU180
 901 0050 0C94 0000 		jmp clear_keyboard_but_mods
 902               	.LVL44:
  66:./tmk_core/common/action_layer.c **** }
 903               		.loc 1 66 5 view .LVU181
 904               	.LBE79:
 905               	.LBE81:
 906               		.cfi_endproc
 907               	.LFE18:
 909               		.section	.text.layer_debug,"ax",@progbits
 910               	.global	layer_debug
 912               	layer_debug:
 913               	.LFB26:
 914               		.cfi_startproc
 915               	/* prologue: function */
 916               	/* frame size = 0 */
 917               	/* stack size = 0 */
 918               	.L__stack_usage = 0
 919               	/* epilogue start */
 920 0000 0895      		ret
 921               		.cfi_endproc
 922               	.LFE26:
 924               		.section	.text.update_source_layers_cache,"ax",@progbits
 925               	.global	update_source_layers_cache
 927               	update_source_layers_cache:
 928               	.LVL45:
 929               	.LFB20:
 106:./tmk_core/common/action_layer.c **** 
 107:./tmk_core/common/action_layer.c **** void layer_debug(void)
 108:./tmk_core/common/action_layer.c **** {
 109:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 110:./tmk_core/common/action_layer.c **** }
 111:./tmk_core/common/action_layer.c **** #endif
 112:./tmk_core/common/action_layer.c **** 
 113:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 114:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 115:./tmk_core/common/action_layer.c **** 
 116:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 117:./tmk_core/common/action_layer.c **** {
 930               		.loc 1 117 1 is_stmt 1 view -0
 931               		.cfi_startproc
 932               	/* prologue: function */
 933               	/* frame size = 0 */
 934               	/* stack size = 0 */
 935               	.L__stack_usage = 0
 118:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 936               		.loc 1 118 5 view .LVU183
 937               		.loc 1 118 40 is_stmt 0 view .LVU184
 938 0000 292F      		mov r18,r25
 939 0002 220F      		lsl r18
 940 0004 E22F      		mov r30,r18
 941 0006 E90F      		add r30,r25
 942               		.loc 1 118 19 view .LVU185
 943 0008 E80F      		add r30,r24
 944               	.LVL46:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 945               		.loc 1 119 5 is_stmt 1 view .LVU186
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 946               		.loc 1 120 5 view .LVU187
 121:./tmk_core/common/action_layer.c **** 
 122:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 947               		.loc 1 122 5 view .LVU188
 948               	.LBB82:
 949               		.loc 1 122 10 view .LVU189
 950               		.loc 1 122 34 view .LVU190
 951               	.LBE82:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 952               		.loc 1 120 19 is_stmt 0 view .LVU191
 953 000a 8E2F      		mov r24,r30
 954               	.LVL47:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 955               		.loc 1 120 19 view .LVU192
 956 000c 8770      		andi r24,lo8(7)
 957               	.LVL48:
 958               	.LBB83:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 124:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 125:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 126:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 959               		.loc 1 126 13 view .LVU193
 960 000e 41E0      		ldi r20,lo8(1)
 961 0010 00C0      		rjmp 2f
 962               		1:
 963 0012 440F      		lsl r20
 964               		2:
 965 0014 8A95      		dec r24
 966 0016 02F4      		brpl 1b
 967               	.LBE83:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 968               		.loc 1 119 19 view .LVU194
 969 0018 E695      		lsr r30
 970 001a E695      		lsr r30
 971 001c E695      		lsr r30
 972               	.LVL49:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 973               		.loc 1 119 19 view .LVU195
 974 001e 85E0      		ldi r24,lo8(5)
 975               	.LVL50:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 976               		.loc 1 119 19 view .LVU196
 977 0020 E89F      		mul r30,r24
 978 0022 F001      		movw r30,r0
 979 0024 1124      		clr __zero_reg__
 980               	.LVL51:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 981               		.loc 1 119 19 view .LVU197
 982 0026 E050      		subi r30,lo8(-(source_layers_cache))
 983 0028 F040      		sbci r31,hi8(-(source_layers_cache))
 984               	.LBB84:
 985               		.loc 1 126 13 view .LVU198
 986 002a 30E0      		ldi r19,0
 987 002c 20E0      		ldi r18,0
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 988               		.loc 1 124 45 view .LVU199
 989 002e 70E0      		ldi r23,0
 990               	.LVL52:
 991               	.L16:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 992               		.loc 1 123 9 is_stmt 1 discriminator 3 view .LVU200
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 993               		.loc 1 123 54 is_stmt 0 discriminator 3 view .LVU201
 994 0030 5191      		ld r21,Z+
 995 0032 DF01      		movw r26,r30
 996 0034 1197      		sbiw r26,1
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 997               		.loc 1 124 45 discriminator 3 view .LVU202
 998 0036 CB01      		movw r24,r22
 999 0038 022E      		mov r0,r18
 1000 003a 00C0      		rjmp 2f
 1001               		1:
 1002 003c 9695      		lsr r25
 1003 003e 8795      		ror r24
 1004               		2:
 1005 0040 0A94      		dec r0
 1006 0042 02F4      		brpl 1b
 1007 0044 8170      		andi r24,lo8(1)
 125:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 1008               		.loc 1 125 14 discriminator 3 view .LVU203
 1009 0046 8195      		neg r24
 1010 0048 8527      		eor r24,r21
 1011               		.loc 1 126 13 discriminator 3 view .LVU204
 1012 004a 8423      		and r24,r20
 123:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 1013               		.loc 1 123 54 discriminator 3 view .LVU205
 1014 004c 8527      		eor r24,r21
 1015 004e 8C93      		st X,r24
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1016               		.loc 1 122 63 is_stmt 1 discriminator 3 view .LVU206
 1017               	.LVL53:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1018               		.loc 1 122 34 discriminator 3 view .LVU207
 1019 0050 2F5F      		subi r18,-1
 1020 0052 3F4F      		sbci r19,-1
 1021               	.LVL54:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1022               		.loc 1 122 5 is_stmt 0 discriminator 3 view .LVU208
 1023 0054 2530      		cpi r18,5
 1024 0056 3105      		cpc r19,__zero_reg__
 1025 0058 01F4      		brne .L16
 1026               	/* epilogue start */
 1027               	.LBE84:
 127:./tmk_core/common/action_layer.c ****     }
 128:./tmk_core/common/action_layer.c **** }
 1028               		.loc 1 128 1 view .LVU209
 1029 005a 0895      		ret
 1030               		.cfi_endproc
 1031               	.LFE20:
 1033               		.section	.text.read_source_layers_cache,"ax",@progbits
 1034               	.global	read_source_layers_cache
 1036               	read_source_layers_cache:
 1037               	.LVL55:
 1038               	.LFB21:
 129:./tmk_core/common/action_layer.c **** 
 130:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 131:./tmk_core/common/action_layer.c **** {
 1039               		.loc 1 131 1 is_stmt 1 view -0
 1040               		.cfi_startproc
 1041               	/* prologue: function */
 1042               	/* frame size = 0 */
 1043               	/* stack size = 0 */
 1044               	.L__stack_usage = 0
 132:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 1045               		.loc 1 132 5 view .LVU211
 1046               		.loc 1 132 40 is_stmt 0 view .LVU212
 1047 0000 292F      		mov r18,r25
 1048 0002 220F      		lsl r18
 1049 0004 E22F      		mov r30,r18
 1050 0006 E90F      		add r30,r25
 1051               		.loc 1 132 19 view .LVU213
 1052 0008 E80F      		add r30,r24
 1053               	.LVL56:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 1054               		.loc 1 133 5 is_stmt 1 view .LVU214
 134:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1055               		.loc 1 134 5 view .LVU215
 1056               		.loc 1 134 19 is_stmt 0 view .LVU216
 1057 000a 9E2F      		mov r25,r30
 1058 000c 9770      		andi r25,lo8(7)
 1059               	.LVL57:
 135:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1060               		.loc 1 135 5 is_stmt 1 view .LVU217
 136:./tmk_core/common/action_layer.c **** 
 137:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 1061               		.loc 1 137 5 view .LVU218
 1062               	.LBB85:
 1063               		.loc 1 137 10 view .LVU219
 1064               		.loc 1 137 34 view .LVU220
 1065               	.LBE85:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1066               		.loc 1 133 19 is_stmt 0 view .LVU221
 1067 000e E695      		lsr r30
 1068 0010 E695      		lsr r30
 1069 0012 E695      		lsr r30
 1070               	.LVL58:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1071               		.loc 1 133 19 view .LVU222
 1072 0014 85E0      		ldi r24,lo8(5)
 1073               	.LVL59:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1074               		.loc 1 133 19 view .LVU223
 1075 0016 E89F      		mul r30,r24
 1076 0018 F001      		movw r30,r0
 1077 001a 1124      		clr __zero_reg__
 1078               	.LVL60:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1079               		.loc 1 133 19 view .LVU224
 1080 001c E050      		subi r30,lo8(-(source_layers_cache))
 1081 001e F040      		sbci r31,hi8(-(source_layers_cache))
 134:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1082               		.loc 1 134 19 view .LVU225
 1083 0020 50E0      		ldi r21,0
 1084 0022 40E0      		ldi r20,0
 135:./tmk_core/common/action_layer.c **** 
 1085               		.loc 1 135 13 view .LVU226
 1086 0024 80E0      		ldi r24,0
 1087               	.LVL61:
 1088               	.L19:
 1089               	.LBB86:
 138:./tmk_core/common/action_layer.c ****         layer |=
 1090               		.loc 1 138 9 is_stmt 1 discriminator 3 view .LVU227
 139:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1091               		.loc 1 139 47 is_stmt 0 discriminator 3 view .LVU228
 1092 0026 2191      		ld r18,Z+
 1093 0028 30E0      		ldi r19,0
 140:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 1094               		.loc 1 140 38 discriminator 3 view .LVU229
 1095 002a 092E      		mov r0,r25
 1096 002c 00C0      		rjmp 2f
 1097               		1:
 1098 002e 3695      		lsr r19
 1099 0030 2795      		ror r18
 1100               		2:
 1101 0032 0A94      		dec r0
 1102 0034 02F4      		brpl 1b
 1103 0036 2170      		andi r18,1
 1104 0038 3327      		clr r19
 141:./tmk_core/common/action_layer.c ****             << bit_number;
 1105               		.loc 1 141 13 discriminator 3 view .LVU230
 1106 003a 042E      		mov r0,r20
 1107 003c 00C0      		rjmp 2f
 1108               		1:
 1109 003e 220F      		lsl r18
 1110               		2:
 1111 0040 0A94      		dec r0
 1112 0042 02F4      		brpl 1b
 138:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1113               		.loc 1 138 15 discriminator 3 view .LVU231
 1114 0044 822B      		or r24,r18
 1115               	.LVL62:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1116               		.loc 1 137 63 is_stmt 1 discriminator 3 view .LVU232
 137:./tmk_core/common/action_layer.c ****         layer |=
 1117               		.loc 1 137 34 discriminator 3 view .LVU233
 1118 0046 4F5F      		subi r20,-1
 1119 0048 5F4F      		sbci r21,-1
 1120               	.LVL63:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1121               		.loc 1 137 5 is_stmt 0 discriminator 3 view .LVU234
 1122 004a 4530      		cpi r20,5
 1123 004c 5105      		cpc r21,__zero_reg__
 1124 004e 01F4      		brne .L19
 1125               	/* epilogue start */
 1126               	.LBE86:
 142:./tmk_core/common/action_layer.c ****     }
 143:./tmk_core/common/action_layer.c **** 
 144:./tmk_core/common/action_layer.c ****     return layer;
 145:./tmk_core/common/action_layer.c **** }
 1127               		.loc 1 145 1 view .LVU235
 1128 0050 0895      		ret
 1129               		.cfi_endproc
 1130               	.LFE21:
 1132               		.section	.text.layer_switch_get_layer,"ax",@progbits
 1133               	.global	layer_switch_get_layer
 1135               	layer_switch_get_layer:
 1136               	.LVL64:
 1137               	.LFB23:
 146:./tmk_core/common/action_layer.c **** #endif
 147:./tmk_core/common/action_layer.c **** 
 148:./tmk_core/common/action_layer.c **** /*
 149:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 150:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 151:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 152:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 153:./tmk_core/common/action_layer.c ****  */
 154:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 155:./tmk_core/common/action_layer.c **** {
 156:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 157:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 158:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 159:./tmk_core/common/action_layer.c ****     }
 160:./tmk_core/common/action_layer.c **** 
 161:./tmk_core/common/action_layer.c ****     uint8_t layer;
 162:./tmk_core/common/action_layer.c **** 
 163:./tmk_core/common/action_layer.c ****     if (pressed) {
 164:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 165:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 166:./tmk_core/common/action_layer.c ****     }
 167:./tmk_core/common/action_layer.c ****     else {
 168:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 169:./tmk_core/common/action_layer.c ****     }
 170:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 171:./tmk_core/common/action_layer.c **** #else
 172:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 173:./tmk_core/common/action_layer.c **** #endif
 174:./tmk_core/common/action_layer.c **** }
 175:./tmk_core/common/action_layer.c **** 
 176:./tmk_core/common/action_layer.c **** 
 177:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 178:./tmk_core/common/action_layer.c **** {
 1138               		.loc 1 178 1 is_stmt 1 view -0
 1139               		.cfi_startproc
 1140               		.loc 1 178 1 is_stmt 0 view .LVU237
 1141 0000 BF92      		push r11
 1142               	.LCFI24:
 1143               		.cfi_def_cfa_offset 3
 1144               		.cfi_offset 11, -2
 1145 0002 CF92      		push r12
 1146               	.LCFI25:
 1147               		.cfi_def_cfa_offset 4
 1148               		.cfi_offset 12, -3
 1149 0004 DF92      		push r13
 1150               	.LCFI26:
 1151               		.cfi_def_cfa_offset 5
 1152               		.cfi_offset 13, -4
 1153 0006 EF92      		push r14
 1154               	.LCFI27:
 1155               		.cfi_def_cfa_offset 6
 1156               		.cfi_offset 14, -5
 1157 0008 FF92      		push r15
 1158               	.LCFI28:
 1159               		.cfi_def_cfa_offset 7
 1160               		.cfi_offset 15, -6
 1161 000a 0F93      		push r16
 1162               	.LCFI29:
 1163               		.cfi_def_cfa_offset 8
 1164               		.cfi_offset 16, -7
 1165 000c 1F93      		push r17
 1166               	.LCFI30:
 1167               		.cfi_def_cfa_offset 9
 1168               		.cfi_offset 17, -8
 1169 000e CF93      		push r28
 1170               	.LCFI31:
 1171               		.cfi_def_cfa_offset 10
 1172               		.cfi_offset 28, -9
 1173 0010 DF93      		push r29
 1174               	.LCFI32:
 1175               		.cfi_def_cfa_offset 11
 1176               		.cfi_offset 29, -10
 1177               	/* prologue: function */
 1178               	/* frame size = 0 */
 1179               	/* stack size = 9 */
 1180               	.L__stack_usage = 9
 1181 0012 8C01      		movw r16,r24
 179:./tmk_core/common/action_layer.c ****     action_t action;
 1182               		.loc 1 179 5 is_stmt 1 view .LVU238
 180:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 1183               		.loc 1 180 5 view .LVU239
 1184               	.LVL65:
 181:./tmk_core/common/action_layer.c **** 
 182:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 183:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 1185               		.loc 1 183 5 view .LVU240
 1186               		.loc 1 183 14 is_stmt 0 view .LVU241
 1187 0014 C090 0000 		lds r12,layer_state
 1188 0018 D090 0000 		lds r13,layer_state+1
 1189 001c E090 0000 		lds r14,layer_state+2
 1190 0020 F090 0000 		lds r15,layer_state+3
 1191 0024 8091 0000 		lds r24,default_layer_state
 1192 0028 9091 0000 		lds r25,default_layer_state+1
 1193 002c A091 0000 		lds r26,default_layer_state+2
 1194 0030 B091 0000 		lds r27,default_layer_state+3
 1195               	.LVL66:
 1196               		.loc 1 183 14 view .LVU242
 1197 0034 C82A      		or r12,r24
 1198 0036 D92A      		or r13,r25
 1199 0038 EA2A      		or r14,r26
 1200 003a FB2A      		or r15,r27
 1201               	.LVL67:
 184:./tmk_core/common/action_layer.c ****     /* check top layer first */
 185:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 1202               		.loc 1 185 5 is_stmt 1 view .LVU243
 1203               	.LBB87:
 1204               		.loc 1 185 10 view .LVU244
 1205               		.loc 1 185 25 view .LVU245
 1206               	.LBE87:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1207               		.loc 1 183 14 is_stmt 0 view .LVU246
 1208 003c CFE1      		ldi r28,lo8(31)
 1209 003e D0E0      		ldi r29,0
 1210               	.LVL68:
 1211               	.L23:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1212               		.loc 1 183 14 view .LVU247
 1213 0040 BC2E      		mov r11,r28
 1214               	.LVL69:
 1215               	.LBB88:
 186:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1216               		.loc 1 186 9 is_stmt 1 view .LVU248
 1217               		.loc 1 186 13 is_stmt 0 view .LVU249
 1218 0042 D701      		movw r26,r14
 1219 0044 C601      		movw r24,r12
 1220 0046 0C2E      		mov r0,r28
 1221 0048 00C0      		rjmp 2f
 1222               		1:
 1223 004a B695      		lsr r27
 1224 004c A795      		ror r26
 1225 004e 9795      		ror r25
 1226 0050 8795      		ror r24
 1227               		2:
 1228 0052 0A94      		dec r0
 1229 0054 02F4      		brpl 1b
 1230               		.loc 1 186 12 view .LVU250
 1231 0056 80FD      		sbrc r24,0
 1232 0058 00C0      		rjmp .L22
 1233               	.L25:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1234               		.loc 1 185 33 is_stmt 1 view .LVU251
 1235               	.LVL70:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1236               		.loc 1 185 25 view .LVU252
 1237               	.LVL71:
 1238 005a 2197      		sbiw r28,1
 1239 005c 00F4      		brcc .L23
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1240               		.loc 1 185 25 is_stmt 0 view .LVU253
 1241               	.LBE88:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 188:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 189:./tmk_core/common/action_layer.c ****                 return i;
 190:./tmk_core/common/action_layer.c ****             }
 191:./tmk_core/common/action_layer.c ****         }
 192:./tmk_core/common/action_layer.c ****     }
 193:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 194:./tmk_core/common/action_layer.c ****     return 0;
 1242               		.loc 1 194 12 view .LVU254
 1243 005e B12C      		mov r11,__zero_reg__
 1244               	.LVL72:
 1245               	.L21:
 195:./tmk_core/common/action_layer.c **** #else
 196:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 197:./tmk_core/common/action_layer.c **** #endif
 198:./tmk_core/common/action_layer.c **** }
 1246               		.loc 1 198 1 view .LVU255
 1247 0060 8B2D      		mov r24,r11
 1248               	/* epilogue start */
 1249 0062 DF91      		pop r29
 1250 0064 CF91      		pop r28
 1251 0066 1F91      		pop r17
 1252 0068 0F91      		pop r16
 1253 006a FF90      		pop r15
 1254 006c EF90      		pop r14
 1255 006e DF90      		pop r13
 1256 0070 CF90      		pop r12
 1257               	.LVL73:
 1258               		.loc 1 198 1 view .LVU256
 1259 0072 BF90      		pop r11
 1260 0074 0895      		ret
 1261               	.LVL74:
 1262               	.L22:
 1263               	.LBB89:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1264               		.loc 1 187 13 is_stmt 1 view .LVU257
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1265               		.loc 1 187 22 is_stmt 0 view .LVU258
 1266 0076 B801      		movw r22,r16
 1267 0078 8C2F      		mov r24,r28
 1268 007a 0E94 0000 		call action_for_key
 1269               	.LVL75:
 188:./tmk_core/common/action_layer.c ****                 return i;
 1270               		.loc 1 188 13 is_stmt 1 view .LVU259
 188:./tmk_core/common/action_layer.c ****                 return i;
 1271               		.loc 1 188 16 is_stmt 0 view .LVU260
 1272 007e 0197      		sbiw r24,1
 1273 0080 01F0      		breq .L25
 1274 0082 00C0      		rjmp .L21
 1275               	.LBE89:
 1276               		.cfi_endproc
 1277               	.LFE23:
 1279               		.section	.text.layer_switch_get_action,"ax",@progbits
 1280               	.global	layer_switch_get_action
 1282               	layer_switch_get_action:
 1283               	.LVL76:
 1284               	.LFB24:
 199:./tmk_core/common/action_layer.c **** 
 200:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 201:./tmk_core/common/action_layer.c **** {
 1285               		.loc 1 201 1 is_stmt 1 view -0
 1286               		.cfi_startproc
 1287               		.loc 1 201 1 is_stmt 0 view .LVU262
 1288 0000 CF93      		push r28
 1289               	.LCFI33:
 1290               		.cfi_def_cfa_offset 3
 1291               		.cfi_offset 28, -2
 1292 0002 DF93      		push r29
 1293               	.LCFI34:
 1294               		.cfi_def_cfa_offset 4
 1295               		.cfi_offset 29, -3
 1296               	/* prologue: function */
 1297               	/* frame size = 0 */
 1298               	/* stack size = 2 */
 1299               	.L__stack_usage = 2
 1300 0004 D82F      		mov r29,r24
 1301               	.LVL77:
 1302               		.loc 1 201 1 view .LVU263
 1303 0006 C92F      		mov r28,r25
 1304               	.LVL78:
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1305               		.loc 1 202 5 is_stmt 1 view .LVU264
 1306               		.loc 1 202 27 is_stmt 0 view .LVU265
 1307 0008 0E94 0000 		call layer_switch_get_layer
 1308               	.LVL79:
 1309               		.loc 1 202 12 view .LVU266
 1310 000c 6D2F      		mov r22,r29
 1311 000e 7C2F      		mov r23,r28
 1312               	/* epilogue start */
 203:./tmk_core/common/action_layer.c **** }
 1313               		.loc 1 203 1 view .LVU267
 1314 0010 DF91      		pop r29
 1315               	.LVL80:
 1316               		.loc 1 203 1 view .LVU268
 1317 0012 CF91      		pop r28
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1318               		.loc 1 202 12 view .LVU269
 1319 0014 0C94 0000 		jmp action_for_key
 1320               	.LVL81:
 1321               		.cfi_endproc
 1322               	.LFE24:
 1324               		.section	.text.store_or_get_action,"ax",@progbits
 1325               	.global	store_or_get_action
 1327               	store_or_get_action:
 1328               	.LVL82:
 1329               	.LFB22:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1330               		.loc 1 155 1 is_stmt 1 view -0
 1331               		.cfi_startproc
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1332               		.loc 1 155 1 is_stmt 0 view .LVU271
 1333 0000 1F93      		push r17
 1334               	.LCFI35:
 1335               		.cfi_def_cfa_offset 3
 1336               		.cfi_offset 17, -2
 1337 0002 CF93      		push r28
 1338               	.LCFI36:
 1339               		.cfi_def_cfa_offset 4
 1340               		.cfi_offset 28, -3
 1341 0004 DF93      		push r29
 1342               	.LCFI37:
 1343               		.cfi_def_cfa_offset 5
 1344               		.cfi_offset 29, -4
 1345               	/* prologue: function */
 1346               	/* frame size = 0 */
 1347               	/* stack size = 3 */
 1348               	.L__stack_usage = 3
 1349 0006 162F      		mov r17,r22
 1350               	.LVL83:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1351               		.loc 1 155 1 view .LVU272
 1352 0008 D72F      		mov r29,r23
 1353               	.LVL84:
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1354               		.loc 1 157 5 is_stmt 1 view .LVU273
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1355               		.loc 1 157 8 is_stmt 0 view .LVU274
 1356 000a 9091 0000 		lds r25,disable_action_cache
 1357 000e 9923      		tst r25
 1358 0010 01F0      		breq .L32
 158:./tmk_core/common/action_layer.c ****     }
 1359               		.loc 1 158 9 is_stmt 1 view .LVU275
 1360               	.LVL85:
 158:./tmk_core/common/action_layer.c ****     }
 1361               		.loc 1 158 16 is_stmt 0 view .LVU276
 1362 0012 862F      		mov r24,r22
 1363               	.LVL86:
 158:./tmk_core/common/action_layer.c ****     }
 1364               		.loc 1 158 16 view .LVU277
 1365 0014 972F      		mov r25,r23
 1366               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1367               		.loc 1 174 1 view .LVU278
 1368 0016 DF91      		pop r29
 1369               	.LVL87:
 174:./tmk_core/common/action_layer.c **** 
 1370               		.loc 1 174 1 view .LVU279
 1371 0018 CF91      		pop r28
 1372 001a 1F91      		pop r17
 158:./tmk_core/common/action_layer.c ****     }
 1373               		.loc 1 158 16 view .LVU280
 1374 001c 0C94 0000 		jmp layer_switch_get_action
 1375               	.LVL88:
 1376               	.L32:
 161:./tmk_core/common/action_layer.c **** 
 1377               		.loc 1 161 5 is_stmt 1 view .LVU281
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1378               		.loc 1 163 5 view .LVU282
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1379               		.loc 1 163 8 is_stmt 0 view .LVU283
 1380 0020 8823      		tst r24
 1381 0022 01F0      		breq .L33
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1382               		.loc 1 164 9 is_stmt 1 view .LVU284
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1383               		.loc 1 164 17 is_stmt 0 view .LVU285
 1384 0024 862F      		mov r24,r22
 1385               	.LVL89:
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1386               		.loc 1 164 17 view .LVU286
 1387 0026 972F      		mov r25,r23
 1388 0028 0E94 0000 		call layer_switch_get_layer
 1389               	.LVL90:
 1390 002c C82F      		mov r28,r24
 1391               	.LVL91:
 165:./tmk_core/common/action_layer.c ****     }
 1392               		.loc 1 165 9 is_stmt 1 view .LVU287
 1393 002e 682F      		mov r22,r24
 1394 0030 812F      		mov r24,r17
 1395               	.LVL92:
 165:./tmk_core/common/action_layer.c ****     }
 1396               		.loc 1 165 9 is_stmt 0 view .LVU288
 1397 0032 9D2F      		mov r25,r29
 1398 0034 0E94 0000 		call update_source_layers_cache
 1399               	.LVL93:
 1400               	.L34:
 170:./tmk_core/common/action_layer.c **** #else
 1401               		.loc 1 170 5 is_stmt 1 view .LVU289
 170:./tmk_core/common/action_layer.c **** #else
 1402               		.loc 1 170 12 is_stmt 0 view .LVU290
 1403 0038 612F      		mov r22,r17
 1404 003a 7D2F      		mov r23,r29
 1405 003c 8C2F      		mov r24,r28
 1406               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1407               		.loc 1 174 1 view .LVU291
 1408 003e DF91      		pop r29
 1409               	.LVL94:
 174:./tmk_core/common/action_layer.c **** 
 1410               		.loc 1 174 1 view .LVU292
 1411 0040 CF91      		pop r28
 1412               	.LVL95:
 174:./tmk_core/common/action_layer.c **** 
 1413               		.loc 1 174 1 view .LVU293
 1414 0042 1F91      		pop r17
 170:./tmk_core/common/action_layer.c **** #else
 1415               		.loc 1 170 12 view .LVU294
 1416 0044 0C94 0000 		jmp action_for_key
 1417               	.LVL96:
 1418               	.L33:
 168:./tmk_core/common/action_layer.c ****     }
 1419               		.loc 1 168 9 is_stmt 1 view .LVU295
 168:./tmk_core/common/action_layer.c ****     }
 1420               		.loc 1 168 17 is_stmt 0 view .LVU296
 1421 0048 862F      		mov r24,r22
 1422               	.LVL97:
 168:./tmk_core/common/action_layer.c ****     }
 1423               		.loc 1 168 17 view .LVU297
 1424 004a 972F      		mov r25,r23
 1425 004c 0E94 0000 		call read_source_layers_cache
 1426               	.LVL98:
 1427 0050 C82F      		mov r28,r24
 1428               	.LVL99:
 168:./tmk_core/common/action_layer.c ****     }
 1429               		.loc 1 168 17 view .LVU298
 1430 0052 00C0      		rjmp .L34
 1431               		.cfi_endproc
 1432               	.LFE22:
 1434               	.global	source_layers_cache
 1435               		.section	.bss.source_layers_cache,"aw",@nobits
 1438               	source_layers_cache:
 1439 0000 0000 0000 		.zero	5
 1439      00
 1440               	.global	layer_state
 1441               		.section	.bss.layer_state,"aw",@nobits
 1444               	layer_state:
 1445 0000 0000 0000 		.zero	4
 1446               	.global	default_layer_state
 1447               		.section	.bss.default_layer_state,"aw",@nobits
 1450               	default_layer_state:
 1451 0000 0000 0000 		.zero	4
 1452               		.text
 1453               	.Letext0:
 1454               		.file 2 "/opt/homebrew/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 1455               		.file 3 "./tmk_core/common/keyboard.h"
 1456               		.file 4 "./tmk_core/common/action_code.h"
 1457               		.file 5 "./tmk_core/common/action.h"
 1458               		.file 6 "./tmk_core/common/action_layer.h"
 1459               		.file 7 "./tmk_core/common/debug.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:4      *ABS*:000000000000003f __SREG__
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:13     .text.default_layer_debug:0000000000000000 default_layer_debug
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:32     .text.default_layer_set:0000000000000000 default_layer_set
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:1450   .bss.default_layer_state:0000000000000000 default_layer_state
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:70     .text.default_layer_or:0000000000000000 default_layer_or
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:160    .text.default_layer_and:0000000000000000 default_layer_and
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:250    .text.default_layer_xor:0000000000000000 default_layer_xor
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:340    .text.layer_clear:0000000000000000 layer_clear
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:1444   .bss.layer_state:0000000000000000 layer_state
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:376    .text.layer_move:0000000000000000 layer_move
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:431    .text.layer_on:0000000000000000 layer_on
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:501    .text.layer_off:0000000000000000 layer_off
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:572    .text.layer_invert:0000000000000000 layer_invert
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:642    .text.layer_or:0000000000000000 layer_or
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:732    .text.layer_and:0000000000000000 layer_and
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:822    .text.layer_xor:0000000000000000 layer_xor
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:912    .text.layer_debug:0000000000000000 layer_debug
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:927    .text.update_source_layers_cache:0000000000000000 update_source_layers_cache
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:1438   .bss.source_layers_cache:0000000000000000 source_layers_cache
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:1036   .text.read_source_layers_cache:0000000000000000 read_source_layers_cache
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:1135   .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:1282   .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
/var/folders/0z/ym_gdwfd5tg7m49f_1nfh8300000gn/T//ccBVejmH.s:1327   .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
disable_action_cache
__do_clear_bss
